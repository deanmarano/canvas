(function() {

  window.App.Templates.HistogramBar = $('#templates #histogramBar').html();

  window.App.Views.HistogramView = Backbone.View.extend({
    initialize: function(options) {
      var _this = this;
      this.canvas = options.canvas;
      return this.canvas.bind('updated', function() {
        return _this.showHist();
      });
    },
    bars: function(values) {
      var $ul, bar, barHeight, height, max, value, width, _i, _len;
      max = _.max(values);
      height = this.$el.height();
      width = this.$el.width() / values.length;
      $ul = $('<ul>');
      for (_i = 0, _len = values.length; _i < _len; _i++) {
        value = values[_i];
        barHeight = (value / max) * height;
        bar = _.template(App.Templates.HistogramBar, {
          width: width,
          value: value,
          barHeight: barHeight,
          whitespaceHeight: height - barHeight
        });
        $ul.append(bar);
      }
      return this.$('ul').replaceWith($ul);
    },
    showHist: function() {
      var arrayResult, result, _i, _results;
      result = _.countBy(this.canvas.imageData.getAllPixels(), function(pixel) {
        return pixel.average().red;
      });
      arrayResult = _.map((function() {
        _results = [];
        for (_i = 0; _i <= 255; _i++){ _results.push(_i); }
        return _results;
      }).apply(this), function(index) {
        return result[index] || 0;
      });
      return this.bars(arrayResult);
    }
  });

}).call(this);
